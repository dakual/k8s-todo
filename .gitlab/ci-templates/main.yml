include:
  - local: '.gitlab/ci-templates/environments/dev.yml'
    rules:
    - if: $CI_COMMIT_TAG !~ /release-v.*/ && $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
  - local: '.gitlab/ci-templates/environments/stg.yml'
    rules:
    - if: $CI_COMMIT_TAG !~ /release-v.*/ && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  - local: '.gitlab/ci-templates/environments/prd.yml'
    rules:
    - if: $CI_COMMIT_TAG =~ /release-v.*/
  - local: '.gitlab/ci-templates/jobs.yml'

workflow:
  rules:
  - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
  - if: '$CI_COMMIT_TAG =~ /release-v.*/'
  - if: '$CI_PIPELINE_SOURCE == "web"'

stages:
  - build
  - release
  - deploy
  - destroy

.build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - cd ${APP}
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - IMAGE_TAG=${ENV}-${CI_COMMIT_REF_SLUG}
    - IMAGE=${CI_REGISTRY_IMAGE}/${APP}:${IMAGE_TAG}
    - docker build --tag ${IMAGE} .
    - docker push ${IMAGE}
  tags:
    - ${RUNNER}

.deploy-configure:
  image:
    name: bitnami/kubectl:latest
    entrypoint: ['']
  before_script: 
    - kubectl config get-contexts
    - kubectl config use-context ci-todo/app:minikube

.deploy:
  extends:
    - .deploy-configure
  stage: deploy
  script:
    - kubectl apply -f k8s/
  tags:
    - ${RUNNER}

.destroy:
  extends:
    - .deploy-configure
  stage: destroy
  script:
    - kubectl delete -f k8s/
  tags:
    - ${RUNNER}


"Package Release":
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  script:
    - echo "running release job"
  release: 
    tag_name: '$CI_COMMIT_TAG'
    description: '$CI_COMMIT_TAG'
    assets:
      links:
        - name: 'Docker Container'
          url: 'https://${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}'
  needs:
    - .build
  rules:
    - if: '$CI_COMMIT_TAG'
    - if: '$CI_COMMIT_TAG =~ /release-v.*/'
    - when: never